@model X.PagedList.IPagedList<HealthcareSystem.Models.Appointment>
@using X.PagedList.Mvc.Core;


@using Microsoft.AspNetCore.Identity
@using HealthcareSystem.Areas.Identity.Data

@inject SignInManager<Users> SignInManager
@inject UserManager<Users> UserManager


@{
    ViewData["Title"] = "Appointment Page";
}

@section Styles {

    <link href="@Url.Content("~/css/site.css")" rel="stylesheet" type="text/css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
          integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
}

<section id="appointments" class="container py-5 mt-5">
    @using (Html.BeginForm("Appointment", "Appointment", FormMethod.Get))
    {
        <p>
            Find by date: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
            <input type="submit" value="Search" />
        </p>
    }
    @foreach (var item in Model)
    {
        <div class="row mt-5 text-center">
            <div class="col-lg-12 ">
                <div class="card card-margin">
                    <div class="card-header no-border">
                        <h5 class="card-title"> Appointment</h5>
                    </div>
                    <div class="card-body pt-0">
                        <div class="widget-49">
                            <div class="widget-49-title-wrapper">
                                <div class="widget-49-meeting-info pr-5">
                                    <span class="widget-49-date-day text-dark">@Html.DisplayFor(modelItem => item.appointmentdate)</span>
                                    <span class="widget-49-meeting-time">Name:@Html.DisplayFor(modelItem => item.username) </span>
                                    <span class="widget-49-meeting-time">Lastname:@Html.DisplayFor(modelItem => item.userlastname) </span>
                                </div>
                            </div>
                            <div class="widget-49-meeting-action">
                                @if (SignInManager.IsSignedIn(User))
                                {
                                    <a class="btn btn-outline-success btn-sm" asp-action="Edit" asp-route-id="@item.appointmentid" role="button">Edit</a>
                                    <a class="btn btn-outline-danger btn-sm" asp-action="Delete" asp-route-id="@item.appointmentid" role="button">Delete</a>
                                }
                                <a class="btn btn-outline-primary btn-sm" asp-action="Details" asp-route-id="@item.appointmentid" role="button">Details</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    }
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Appointment",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

</section>



